# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: apache-atlas-service
  name: {{ .Release.Name }}-apache-atlas-service

spec:
  ports:
    - name: proxy
      port: 9443
    - name: web
      port: 21000
    - name: kafka
      port: 9027
  selector:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: apache-atlas-service
...
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: {{ .Release.Name }}-apache-atlas
  labels:
    app.kubernetes.io/name: {{ include "myapp.name" . }}
    helm.sh/chart: {{ include "myapp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: apache-atlas-service

spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "myapp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: apache-atlas-service
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: {{ include "myapp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: apache-atlas-service
    spec:
      # Fix the hostname to what the image requires of itself
      hostname: atlas
      volumes:
        - name: egeria-atlas-connector-volume
          emptyDir: {}
      initContainers:
        - name: init-connector
          image: "{{ if (.Values.image.configure.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.configure.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.configure.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.configure.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.configure.name }}\
                  :{{ .Values.image.configure.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.configure.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          command:
            - "/bin/bash"
            - "-c"
            - >
                cd /opt/egeria/connectors &&
                curl --location ${CONNECTOR_URL} --output ${CONNECTOR_JAR}
          volumeMounts:
            - mountPath: /opt/egeria/connectors
              name: egeria-atlas-connector-volume
      containers:
        - name: proxy
          image: "{{ if (.Values.image.egeria.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.egeria.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.egeria.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.egeria.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.egeria.name }}\
                  :{{ .Values.image.egeria.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.egeria.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          env:
              - name: "LOADER_PATH"
                value: "/opt/egeria/connectors"
              - name: "LOGGING_LEVEL_ORG_ODPI_EGERIA_CONNECTORS_APACHE_ATLAS"
                value: "DEBUG"
          ports:
            - containerPort: 9443
          readinessProbe:
            tcpSocket:
              port: 9443
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 6
          resources:
            requests:
              memory: "1Gi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - mountPath: /opt/egeria/connectors
              name: egeria-atlas-connector-volume
              readOnly: true
        - name: apache-atlas
          image: "{{ if (.Values.image.apacheatlas.registry | default .Values.imageDefaults.registry) }}{{ .Values.image.apacheatlas.registry | default .Values.imageDefaults.registry }}/{{ end }}\
                  {{ if (.Values.image.apacheatlas.namespace | default .Values.imageDefaults.namespace) }}{{ .Values.image.apacheatlas.namespace | default .Values.imageDefaults.namespace }}/{{ end }}\
                  {{ .Values.image.apacheatlas.name }}\
                  :{{ .Values.image.apacheatlas.tag | default .Values.imageDefaults.tag }}"
          imagePullPolicy: {{ .Values.image.apacheatlas.pullPolicy | default .Values.imageDefaults.pullPolicy }}
          securityContext:
            privileged: true
          ports:
            - containerPort: 21000
            - containerPort: 9026
            - containerPort: 9027
          livenessProbe:
            httpGet:
              path: /login.jsp
              port: 21000
              scheme: "HTTP"
            initialDelaySeconds: 180
            periodSeconds: 20
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /login.jsp
              port: 21000
              scheme: "HTTP"
            initialDelaySeconds: 180
            periodSeconds: 20
            failureThreshold: 12
          resources:
            requests:
              memory: "2Gi"
              cpu: "2000m"
            limits:
              memory: "4Gi"
              cpu: "4000m"

status: {}
...
